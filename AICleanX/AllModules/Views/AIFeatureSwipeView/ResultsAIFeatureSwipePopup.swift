import SwiftUI
import Photos
import UIKit // –î–ª—è UIImpactFeedbackGenerator
// import CustomUIComponents // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –∑–¥–µ—Å—å –æ–±—ä—è–≤–ª–µ–Ω VisualEffectView

struct ResultsAIFeatureSwipePopup: View {
    let deleteCount: Int
    @Binding var isPresented: Bool
    let onViewResults: () -> Void
    let onContinueSwiping: () -> Void
    
    @State private var showContent = false
    @State private var backgroundOpacity = 0.0
    
    // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–≤–∞–π–ø–∏–Ω–≥–∞
    private func dismissPopup() {
        let impact = UIImpactFeedbackGenerator(style: .light)
        impact.impactOccurred()
        
        withAnimation(.easeIn(duration: 0.2)) {
            backgroundOpacity = 0
            showContent = false
        }
        
        // 1. –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–≤—è–∑–∫—É –≤ false, —á—Ç–æ–±—ã —Å–∫—Ä—ã—Ç—å –ø–æ–ø–∞–ø
        DispatchQueue.main.asyncAfter(deadline: .now() + 0.2) {
            self.isPresented = false // <--- –î–û–ë–ê–í–¨–¢–ï –≠–¢–û
        }
        
        // 2. –ó–∞—Ç–µ–º –≤—ã–∑–≤–∞—Ç—å onContinueSwiping() (—á—Ç–æ, –≤–µ—Ä–æ—è—Ç–Ω–æ, –ø—Ä–æ—Å—Ç–æ —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–æ–¥–∏—Ç–µ–ª—é –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ —Å–≤–∞–π–ø–∞)
        DispatchQueue.main.asyncAfter(deadline: .now() + 0.3) {
//            onContinueSwiping() // <--- –≠—Ç–æ—Ç —ç–∫—à–Ω –¥–æ–ª–∂–µ–Ω —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É —Å–≤–∞–π–ø–∞, –ù–û –ù–ï –ó–ê–ö–†–´–í–ê–¢–¨ –í–ï–°–¨ –≠–ö–†–ê–ù.
        }
    }

    var body: some View {
        ZStack(alignment: .bottom) { // –ü–†–ò–í–Ø–ó–ö–ê –ö–ê–†–¢–û–ß–ö–ò –ö –ù–ò–ó–£ –≠–ö–†–ê–ù–ê
            
            // 1. –õ–µ–≥–∫–∏–π –æ–≤–µ—Ä–ª–µ–π (–∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ —Ñ–æ–Ω–∞)
            CMColor.black // –ò–°–ü–û–õ–¨–ó–£–ï–ú –í–ê–® –ì–õ–û–ë–ê–õ–¨–ù–´–ô –¶–í–ï–¢
                .opacity(backgroundOpacity * 0.4) // –£–º–µ–Ω—å—à–∞–µ–º –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∑–∞—Ç–µ–º–Ω–µ–Ω–∏—è
                .ignoresSafeArea()
                .onTapGesture {
                    dismissPopup()
                }
            
            // 2. –ö–∞—Ä—Ç–æ—á–∫–∞-–±–∞–Ω–Ω–µ—Ä (Bottom Sheet)
            VStack(spacing: 24) {
                
                // --- –°–µ–∫—Ü–∏—è –ó–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –û–ø–∏—Å–∞–Ω–∏—è (HStack –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –ø–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é) ---
                HStack(alignment: .top, spacing: 12) {
                    
                    // –ò–∫–æ–Ω–∫–∞: –ü—Ä–æ—Å—Ç–æ–π –∞–∫—Ü–µ–Ω—Ç
                    Image(systemName: "sparkles") // –ù–æ–≤—ã–π, –±–æ–ª–µ–µ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π —Å–∏–º–≤–æ–ª
                        .font(.system(size: 28, weight: .bold))
                        .foregroundStyle(CMColor.accent) // –ò–°–ü–û–õ–¨–ó–£–ï–ú –í–ê–® –¶–í–ï–¢
                        .padding(.top, 2)
                        
                    // –¢–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫ (–≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é)
                    VStack(alignment: .leading, spacing: 4) {
                        
                        // –ù–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
                        Text("Cleanup Ready! üöÄ")
                            .font(.headline)
                            .fontWeight(.bold)
                            .foregroundColor(CMColor.primaryText) // –ò–°–ü–û–õ–¨–ó–£–ï–ú –í–ê–® –¶–í–ï–¢
                            .multilineTextAlignment(.leading)
                        
                        // –ù–æ–≤—ã–π –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
                        Text("AI found \(deleteCount) potential clutter photo\(deleteCount == 1 ? "" : "s"). Review and confirm removal now?")
                            .font(.subheadline)
                            .foregroundColor(CMColor.secondaryText) // –ò–°–ü–û–õ–¨–ó–£–ï–ú –í–ê–® –¶–í–ï–¢
                            .multilineTextAlignment(.leading)
                            .lineLimit(3)
                    }
                    
                    Spacer(minLength: 0)
                }

                // --- –°–µ–∫—Ü–∏—è –ö–Ω–æ–ø–æ–∫ (CTA) ---
                VStack(spacing: 8) {
                    
                    // 1. –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ (Review & Clean Up)
                    Button {
                        let impact = UIImpactFeedbackGenerator(style: .medium)
                        impact.impactOccurred()
                        
                        withAnimation(.easeIn(duration: 0.2)) {
                            backgroundOpacity = 0
                            showContent = false
                        }
                        
                        DispatchQueue.main.asyncAfter(deadline: .now() + 0.2) {
                            onViewResults()
                        }
                    } label: {
                        HStack(spacing: 8) {
                            Image(systemName: "trash.fill") // –ù–æ–≤–∞—è, –±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∞—è –∏–∫–æ–Ω–∫–∞
                                .font(.system(size: 16, weight: .semibold))
                            Text("Review & Clean Up (\(deleteCount))") // –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç
                                .font(.body)
                                .fontWeight(.semibold)
                        }
                        .foregroundColor(CMColor.white) // –ò–°–ü–û–õ–¨–ó–£–ï–ú –í–ê–® –¶–í–ï–¢
                        .frame(maxWidth: .infinity)
                        .frame(height: 52) // –ë–æ–ª–µ–µ —Ç–æ–Ω–∫–∞—è –∫–Ω–æ–ø–∫–∞
                        .background(
                            LinearGradient(
                                colors: [CMColor.primary, CMColor.accent], // –ò–°–ü–û–õ–¨–ó–£–ï–ú –í–ê–®–ò –¶–í–ï–¢–ê
                                startPoint: .leading,
                                endPoint: .trailing
                            )
                        )
                        .clipShape(RoundedRectangle(cornerRadius: 12))
                        .shadow(color: CMColor.primary.opacity(0.4), radius: 8, x: 0, y: 4) // –ò–°–ü–û–õ–¨–ó–£–ï–ú –í–ê–® –¶–í–ï–¢
                    }
                    
                    // 2. –í—Ç–æ—Ä–∏—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞ (Continue Swiping)
                    Button {
                        dismissPopup()
                    } label: {
                        HStack(spacing: 8) {
                            Image(systemName: "arrow.forward.square.fill") // –ù–æ–≤–∞—è –∏–∫–æ–Ω–∫–∞
                                .font(.system(size: 16, weight: .medium))
                            Text("Not Now, Continue Swiping") // –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç
                                .font(.body)
                                .fontWeight(.regular)
                        }
                        .foregroundColor(CMColor.secondaryText) // –ò–°–ü–û–õ–¨–ó–£–ï–ú –í–ê–® –¶–í–ï–¢
                        .frame(maxWidth: .infinity)
                        .frame(height: 52)
                        .background(CMColor.backgroundSecondary.opacity(0.5)) // –ò–°–ü–û–õ–¨–ó–£–ï–ú –í–ê–® –¶–í–ï–¢ (—Å –º–µ–Ω—å—à–µ–π –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é)
                        .clipShape(RoundedRectangle(cornerRadius: 12))
                    }
                }
                .scaleEffect(showContent ? 1 : 0.9) // –õ–µ–≥–∫–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                .opacity(showContent ? 1 : 0)
                .animation(.spring(response: 0.6, dampingFraction: 0.7).delay(0.1), value: showContent)
            }
            .padding(.top, 24)
            .padding(.horizontal, 20)
            .padding(.bottom, 40) // –û—Ç—Å—Ç—É–ø –æ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–æ–Ω—ã
            .background(
                // –§–æ–Ω –∫–∞—Ä—Ç–æ—á–∫–∏
                RoundedRectangle(cornerRadius: 24)
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è "regularMaterial", —Ç–∞–∫ –∫–∞–∫ CMColor.regularMaterial –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
                    .fill(.regularMaterial)
                    .shadow(color: CMColor.black.opacity(0.15), radius: 10, x: 0, y: -5) // –ò–°–ü–û–õ–¨–ó–£–ï–ú –í–ê–® –¶–í–ï–¢
            )
            .clipShape(RoundedRectangle(cornerRadius: 24))
            .padding(.horizontal, 16)
            // –ê–Ω–∏–º–∞—Ü–∏—è: –°–º–µ—â–µ–Ω–∏–µ —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö (–≤—ã–≥–ª—è–¥–∏—Ç –°–ò–õ–¨–ù–û –ø–æ-–¥—Ä—É–≥–æ–º—É)
            .offset(y: showContent ? 0 : 300)
            .opacity(showContent ? 1 : 0)
            .animation(.spring(response: 0.6, dampingFraction: 0.9), value: showContent)
        }
        .onAppear {
            withAnimation(.easeOut(duration: 0.3)) {
                backgroundOpacity = 1.0 // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–Ω—É—é –≤–∏–¥–∏–º–æ—Å—Ç—å –æ–≤–µ—Ä–ª–µ—è
            }
            
            withAnimation(.spring(response: 0.6, dampingFraction: 0.9).delay(0.1)) {
                showContent = true
            }
        }
    }
}
